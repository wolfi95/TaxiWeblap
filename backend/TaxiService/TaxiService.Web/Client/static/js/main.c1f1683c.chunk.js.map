{"version":3,"sources":["resources/images/executive/mercedes_e.jpg","resources/images/luxury/mercedes_s.png","resources/images/7seater/mercedes_v.jpg","reportWebVitals.ts","redux/actionTypes/userActionTypes.tsx","redux/reducers/userReducer.tsx","redux/reducers/rootReducer.tsx","redux/store.tsx","Components/Footer/FooterComponent.tsx","config/Constants/contacts.tsx","redux/actions/userActions.tsx","Components/Header/HeaderComponent.tsx","Components/AccountPageWrapper/AccountPageWrapper.tsx","config/Axiosconfig.tsx","Pages/Account/ChangePasswordPage/ChangePasswordPage.tsx","Pages/Account/ChangePersonalData/ChangePersonalDataPage.tsx","Pages/Account/Overview/OverViewPage.tsx","config/Enums/ReservationType.tsx","Pages/Account/Reservations/MyReservationsPage.tsx","Pages/Account/Settings/SettingsPage.tsx","Pages/ContactPage/ContactPage.tsx","Pages/Login/LoginPage.tsx","Pages/Register/RegisterPage.tsx","config/Enums/CarType.tsx","config/Googleconfig.tsx","Pages/Reservation/ReservationPage.tsx","RouterPage.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CLEAR_USER_STATE","SAVE_TOKEN","UPDATE_DATA","initialState","token","sessionStorage","getItem","email","userId","name","address","rootReducer","combineReducers","user","state","action","type","setItem","payload","data","Email","Name","Address","createStore","composeWithDevTools","FooterComponent","id","className","saveToken","content","clearUserState","updateUserState","connector","connect","dispatch","bindActionCreators","props","useState","redirect","setRedirect","loginRedirect","setLoginRedirect","servicesRedirect","setServicesRedirect","accountRedirect","setAccountRedirect","aboutRedirect","setAboutRedirect","contactRedirect","setContactRedirect","logoutRedirect","setLogoutRedirect","useEffect","React","anchorEl","setAnchorEl","handleMenuClose","redirectString","to","Navbar","variant","expand","Toggle","Collapse","Button","onClick","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","clear","drawerWidth","useStyles","makeStyles","theme","createStyles","drawerRoot","display","flexDirection","appBar","height","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","marginTop","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","maxWidth","flexGrow","contentShift","classes","useTheme","setOpen","changeContent","menuRedirects","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","edge","Typography","header","Drawer","anchor","paper","direction","Divider","List","map","text","index","ListItem","button","handleMenuClick","ListItemText","primary","children","axiosInstance","Axios","baseURL","oldPass","setOldPass","newPass","setNewPass","newPassRe","setNewPassRe","error","setError","passwordInvalid","setPasswordInvalid","errorMsg","setErrorMsg","handleSubmit","x","pass","length","match","c","includes","validatePassword","defaults","headers","post","NewPassword","NewPasswordConfirm","OldPassword","res","catch","err","response","message","finally","TextField","label","value","onChange","e","Snackbar","autoHideDuration","Alert","severity","setName","setEmail","setAddress","emailError","setEmailError","dispatchH","useDispatch","emailString","RegExp","test","newState","ReservationType","Props","myReservations","setReservations","get","isNotPastCancelDate","date","now","Date","setHours","getHours","console","log","Card","CardContent","fromAddress","reservationType","Oneway","toAddrress","preferences","pref","price","emailChecked","setEmailChecked","init","setInit","openConfirm","setOpenConfirm","allowEmails","Switch","checked","startIcon","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","delete","reason","setReason","setMessage","multiline","rows","avatar","margin","backgroundColor","palette","secondary","main","form","submit","setPass","Container","component","noValidate","required","fullWidth","autoComplete","autoFocus","preventDefault","Password","status","undefined","tryLogin","Grid","container","item","xs","Link","href","RegisterPage","emailRe","setEmailRe","passRe","setPassRe","spam","setSpam","success","setSuccess","FormControlLabel","control","Checkbox","errors","EmailRe","AllowSpam","PasswordRe","tryRegister","justify","CarType","getMinDate","min","getSettableMinDate","destination","origin","summary","tab","time","selectedType","comment","ReservationPage","autocompleteOrigin","autocompleteDestination","autocompleteOriginByTheHour","initAutocomplete","element","document","getElementById","window","google","maps","places","Autocomplete","componentRestrictions","country","setFields","addListener","handleOriginChange","handleDestinationChange","geolocate","navigator","geolocation","getCurrentPosition","lat","coords","latitude","lng","longitude","circle","Circle","center","radius","accuracy","setBounds","getBounds","initialize","disabled","startAutoSession","switchTab","evt","tabName","i","tabcontent","tablinks","getElementsByClassName","style","replace","setState","ByTheHour","getPrice","FromAddress","ToAddrress","PreferenceIds","Duration","hours","handleDateChange","onSelectClick","Executive","Luxury","SevenSeater","scrollIntoView","behavior","block","prefs","filter","p","Comment","getFullYear","getMonth","getDate","getMinutes","saveState","handleClose","handlePrefChange","temp","findIndex","handleCommentChange","this","scrpt","remove","script","createElement","src","async","defer","addEventListener","body","appendChild","location","scrollTo","history","pathname","placeholder","onFocus","utils","DateFnsUtils","DateTimePicker","ampm","strictCompareDates","minDate","format","v","md","require","default","inputProps","rowsMax","Component","exact","path","Fragment","OverViewPage","ChangePasswordPage","ChangePersonalDataPage","MyReservationsPage","SettingsPage","ContactPage","ReactDOM","render","store","StrictMode","rel","integrity","crossOrigin"],"mappings":"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","file":"static/js/main.c1f1683c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mercedes_e.63430800.jpg\";","export default __webpack_public_path__ + \"static/media/mercedes_s.f47adcc0.png\";","export default __webpack_public_path__ + \"static/media/mercedes_v.40a61dfb.jpg\";","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","export const CLEAR_USER_STATE = \"CLEAR_USER_STATE\";\r\nexport const SAVE_TOKEN = \"SAVE_USER_TOKEN\";\r\nexport const UPDATE_DATA = \"UPDATE_USER_DATA\"","import { SAVE_TOKEN, CLEAR_USER_STATE, UPDATE_DATA } from \"../actionTypes/userActionTypes\";\r\nimport { UserActionTypes } from \"../actions/userActions\";\r\nimport ChangePersonalDataDto from \"../../dtos/Account/ChangePersonalDataDto\";\r\n\r\nexport interface IUserState{\r\n  token: string;\r\n  email: string;\r\n  userId: string;\r\n  name: string;\r\n  address: string;\r\n}\r\n\r\nconst initialState: IUserState = {\r\n   token: sessionStorage.getItem(\"token\") ?? \"\",\r\n   email: sessionStorage.getItem(\"email\") ?? \"\",\r\n   userId: sessionStorage.getItem(\"userId\") ?? \"\",\r\n   name: sessionStorage.getItem(\"name\") ?? \"\",\r\n   address: sessionStorage.getItem(\"address\") ?? \"\"\r\n};\r\n  \r\nexport default function(state = initialState, action: UserActionTypes): IUserState {\r\n  switch (action.type) {\r\n    case SAVE_TOKEN: {\r\n        sessionStorage.setItem(\"token\", action.payload?.token ?? \"\");\r\n        sessionStorage.setItem(\"email\", action.payload?.email ?? \"\");\r\n        sessionStorage.setItem(\"userId\", action.payload?.userId ?? \"\");\r\n        sessionStorage.setItem(\"name\", action.payload?.name ?? \"\");\r\n        sessionStorage.setItem(\"address\", action.payload?.address ?? \"\")\r\n        return{\r\n            ...state,\r\n            token: action.payload?.token ?? \"\",\r\n            email: action.payload?.email ?? \"\",\r\n            userId: action.payload?.userId ?? \"\",\r\n            name: action.payload?.name ?? \"\",\r\n            address: action.payload?.address ?? \"\"\r\n        }\r\n    }\r\n    case CLEAR_USER_STATE: {\r\n      return {\r\n        address: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        token: \"\",\r\n        userId: \"\"\r\n      };\r\n    }\r\n    case UPDATE_DATA: {\r\n      var data = action.payload as ChangePersonalDataDto;\r\n      sessionStorage.setItem(\"email\", data.Email);\r\n      sessionStorage.setItem(\"name\", data.Name);\r\n      sessionStorage.setItem(\"address\", data.Address)\r\n      return{\r\n        ...state,\r\n        email: data.Email,\r\n        name: data.Name,\r\n        address: data.Address\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n  ","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./userReducer\"\r\n\r\nexport const rootReducer = combineReducers({ user: userReducer });\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import { createStore } from \"redux\";\r\nimport {rootReducer} from \"./reducers/rootReducer\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport default createStore(rootReducer, composeWithDevTools());","import React from 'react';\r\nimport { mainEmail, lostAndFoundEmail, phoneNumber } from '../../config/Constants/contacts';\r\nimport './FooterComponent.scss'\r\n\r\nexport default function FooterComponent() {\r\n    return(\r\n        <div id=\"contact\" className=\"d-flex flex-row footer\">\r\n            <div className=\"d-flex flex-column\">\r\n                <span className=\"header\">CONTACT US</span>\r\n                <span>{ mainEmail }</span>\r\n                <span>{ phoneNumber }</span>\r\n                <a>Terms and Conditions</a>\r\n            </div>\r\n            <div className=\"d-flex flex-column\">\r\n                <span className=\"header\">Lost & Found</span>\r\n                <span>{ lostAndFoundEmail }</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const mainEmail = \"mainemail@smth.com\";\r\nexport const phoneNumber = \"06304569874\";\r\nexport const lostAndFoundEmail = \"lostandfound@smth.com\";","import { SAVE_TOKEN, CLEAR_USER_STATE, UPDATE_DATA } from \"../actionTypes/userActionTypes\";\r\nimport UserDto from \"../../dtos/User/UserDto\"\r\nimport ChangePersonalDataDtoDto from '../../dtos/Account/ChangePersonalDataDto'\r\n\r\nexport interface ISaveTokenActionType {\r\n    type: string,\r\n    payload?: UserDto\r\n}\r\n\r\nexport interface IUpdateUserStateActionType {\r\n    type: string,\r\n    payload?: ChangePersonalDataDtoDto\r\n}\r\n\r\nexport interface IClearUserStateActionType {\r\n    type: string\r\n}\r\n\r\nexport const saveToken = (content: UserDto): ISaveTokenActionType => {\r\n    return {\r\n        type: SAVE_TOKEN,\r\n        payload: content\r\n    }\r\n};\r\n\r\nexport const clearUserState = (): IClearUserStateActionType => {\r\n    return {\r\n        type: CLEAR_USER_STATE\r\n    }\r\n}\r\n\r\nexport const updateUserState = (content: ChangePersonalDataDtoDto) => {\r\n    return {\r\n        type: UPDATE_DATA,\r\n        payload: content\r\n    }\r\n}\r\n\r\nexport type UserActionTypes = \r\n    ISaveTokenActionType &\r\n    IClearUserStateActionType &\r\n    IUpdateUserStateActionType;","import React, { useEffect, useState } from 'react';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { clearUserState, UserActionTypes } from '../../redux/actions/userActions';\r\nimport { RootState } from '../../redux/reducers/rootReducer';\r\nimport './HeaderComponent.scss'\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { Button, Menu, MenuItem } from '@material-ui/core';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface IMappedProps{\r\n    token: string;\r\n    email: string;\r\n}\r\n\r\ninterface IDispatchedProps {\r\n    clearUserState: () => void;\r\n}\r\n\r\ntype Props = IMappedProps & IDispatchedProps;\r\n\r\nfunction HeaderComponent(props: Props) {\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [loginRedirect, setLoginRedirect] = useState(false);\r\n    const [servicesRedirect, setServicesRedirect] = useState(\"\");\r\n    const [accountRedirect, setAccountRedirect] = useState(false);\r\n    const [aboutRedirect, setAboutRedirect] = useState(false);\r\n    const [contactRedirect, setContactRedirect] = useState(false);    \r\n    const [logoutRedirect, setLogoutRedirect] = useState(false);   \r\n\r\n    useEffect(() => {\r\n        if(redirect) {\r\n            setRedirect(false);\r\n        }\r\n        if(logoutRedirect) {\r\n            setLogoutRedirect(false);\r\n            props.clearUserState();\r\n        }\r\n        if(loginRedirect)\r\n            setLoginRedirect(false);\r\n        if(servicesRedirect !== \"\")\r\n            setServicesRedirect(\"\");        \r\n        if(accountRedirect) {\r\n            setAccountRedirect(false);\r\n        }\r\n        if(aboutRedirect) {\r\n            setAboutRedirect(false);\r\n        }\r\n        if(contactRedirect) {\r\n            setContactRedirect(false);\r\n        }\r\n    })\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = (redirectString: string) => {\r\n        setAnchorEl(null);\r\n        setServicesRedirect(redirectString);\r\n    }\r\n\r\n    if(redirect) {\r\n        return(<Redirect to=\"/home\"/>)\r\n    }\r\n    else \r\n    if(logoutRedirect) {\r\n        return(<Redirect to=\"/login\"/>)\r\n    }\r\n    else\r\n    if(loginRedirect) {\r\n        return(<Redirect to=\"/login\"/>)\r\n    }\r\n    else\r\n    if(servicesRedirect){\r\n        return(<Redirect to={servicesRedirect}/>)\r\n    }\r\n    else\r\n    if(accountRedirect) {\r\n        return(<Redirect to=\"/account/overview\"/>)\r\n    }\r\n    else\r\n    if(aboutRedirect) {\r\n        return(<Redirect to=\"/about\"/>)\r\n    }\r\n    else\r\n    if(contactRedirect) {\r\n        return(<Redirect to=\"/contact\"/>)\r\n    }\r\n    else {\r\n        return (\r\n            <Navbar variant=\"dark\" expand=\"md\" className=\"header-container\">                        \r\n                <img\r\n                className=\"header-img\"\r\n                //src={require(\"../images/logo_black.jpg\")}\r\n                ></img>\r\n                <span className=\"header-title\">TAXI SERVICES</span>\r\n                <Navbar.Toggle />            \r\n                <Navbar.Collapse className=\"menu\">\r\n                    <Button onClick={() => setRedirect(true)}>\r\n                        HOME\r\n                    </Button>\r\n                    <Button onClick={() => setAboutRedirect(true)}>\r\n                        ABOUT US\r\n                    </Button>\r\n                    <Button aria-controls=\"services-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                        SERVICES\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"services-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={() => handleMenuClose(\"\")}>\r\n                            <MenuItem onClick={() => handleMenuClose(\"/services/airport\")}>Airport Transfers</MenuItem>\r\n                            <MenuItem onClick={() => handleMenuClose(\"/services/chaffeurs\")}>Corporate Chaffeurs</MenuItem>\r\n                            <MenuItem onClick={() => handleMenuClose(\"/services/events\")}>Event Chaffeuring</MenuItem>\r\n                    </Menu>\r\n                    <Button onClick={() => setContactRedirect(true)}>\r\n                        CONTACT US\r\n                    </Button>\r\n                    <div className=\"end\">\r\n                    {!props.token ? \r\n                    (\r\n                        <Button onClick={() => setLoginRedirect(true)}>\r\n                            LOG IN\r\n                        </Button>\r\n                    ) :\r\n                    (\r\n                        <div className=\"d-flex align-items-center\">\r\n                            <Button onClick={() => {setAccountRedirect(true)}}>\r\n                                ACCOUNT\r\n                            </Button>\r\n                            <Button onClick={() => {sessionStorage.clear(); setLogoutRedirect(true)}}>\r\n                                LOG OUT\r\n                            </Button>\r\n                            <span className=\"user-email\">Email: {props.email}</span>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </Navbar.Collapse>     \r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActionTypes>) =>\r\n    bindActionCreators(\r\n      {\r\n        clearUserState\r\n      },\r\n      dispatch\r\n    );\r\n  \r\n  const mapStateToProps = (state: RootState): IMappedProps => {\r\n    return {\r\n      token: state.user.token,\r\n      email: state.user.email\r\n    }\r\n  }\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\nexport default connector(HeaderComponent);","import { AppBar, createStyles, CssBaseline, Divider, Drawer, IconButton, List, ListItem, ListItemText, makeStyles, Theme, Toolbar, Typography, useTheme } from '@material-ui/core';\r\nimport React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { RootState } from '../../redux/reducers/rootReducer';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport './AccountPageWrapper.scss';\r\nimport clsx from 'clsx';\r\nimport { Redirect } from 'react-router';\r\n\r\ninterface IMappedProps {\r\n    token: string\r\n}\r\n\r\ninterface IOwnProps {\r\n    children: JSX.Element\r\n    header: string;\r\n}\r\n\r\ntype Props = IMappedProps & IOwnProps;\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    drawerRoot: {\r\n      display: 'flex',\r\n      flexDirection: 'row'\r\n    },\r\n    appBar: {\r\n        height: 'fit-content',\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      marginTop: '-64px'\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      maxWidth: '100%',\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  }),\r\n);\r\n\r\nfunction AccountPageWrapper(props: Props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [content, changeContent] = React.useState(\"\");\r\n    const menuRedirects = [\r\n        'overview',\r\n        'pass',\r\n        'personal',\r\n        'reservations',\r\n        'settings'\r\n    ]\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    }; \r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleMenuClick = (index: number) =>{\r\n        changeContent(\"/account/\" + menuRedirects[index])\r\n    }\r\n\r\n    useEffect(() => {\r\n      if(content)\r\n        changeContent(\"\");\r\n      }\r\n    )\r\n\r\n    if(!props.token)\r\n        return(<Redirect to=\"/login\"/>)\r\n    else \r\n    if(content !== \"\") {\r\n      return(<Redirect to={content}/>)\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"acc-nav-root\">\r\n                <CssBaseline />\r\n                <AppBar\r\n                  position=\"relative\"\r\n                  className={clsx(classes.appBar, {\r\n                      [classes.appBarShift]: open,\r\n                  })}\r\n                >\r\n                <Toolbar>\r\n                    <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                    <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                    <span>My Account / </span>\r\n                    <span>{\" \" + props.header}</span>\r\n                    </Typography>\r\n                </Toolbar>\r\n                </AppBar>\r\n                <div className={classes.drawerRoot}>\r\n                <Drawer\r\n                  className={classes.drawer}\r\n                  variant=\"persistent\"\r\n                  anchor=\"left\"\r\n                  open={open}\r\n                  classes={{\r\n                    paper: classes.drawerPaper,\r\n                  }}\r\n                >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                    {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {['Account overview', 'Change password', 'Change personal data', 'My reservations', 'Settings'].map((text, index) => (\r\n                        <div>\r\n                            <ListItem button onClick={() => handleMenuClick(index)} key={text}>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </div>\r\n                    ))}\r\n                </List>\r\n                </Drawer>\r\n                <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n                >\r\n                    {props.children}\r\n                </main>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): IMappedProps => {\r\n    return{ token: state.user.token }\r\n};\r\n  \r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\nexport default connector(AccountPageWrapper);","import Axios from \"axios\";\r\n\r\nexport const axiosInstance = Axios.create({\r\n    baseURL: 'https://localhost:5001/'\r\n});","import { Button, Snackbar, TextField } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AccountPageWrapper from '../../../Components/AccountPageWrapper/AccountPageWrapper';\r\nimport { axiosInstance } from '../../../config/Axiosconfig';\r\nimport ChangePasswordDto from '../../../dtos/Account/ChangePasswordDto';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport './ChangePasswordPage.scss';\r\n\r\ninterface IMappedProps {\r\n    id: string;\r\n    token: string;\r\n}\r\n\r\nfunction ChangePasswordPage(props: IMappedProps) {\r\n    const [oldPass, setOldPass] = useState(\"\");\r\n    const [newPass, setNewPass] = useState(\"\");\r\n    const [newPassRe, setNewPassRe] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [passwordInvalid, setPasswordInvalid] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n    const resetPage = () => {\r\n        setOldPass(\"\");\r\n        setNewPass(\"\");\r\n        setNewPassRe(\"\");\r\n        setError(\"\");\r\n        setPasswordInvalid(\"\");\r\n    }\r\n\r\n    const validatePassword = (pass: string): string => {\r\n        if(pass.length < 6) {\r\n            return \"Password must be longer then 6 characters.\";\r\n        }\r\n        if(!pass.match('\\\\d')) {\r\n            return \"Password must contain at least one number.\";\r\n        }\r\n        if(!pass.match('[a-z]') || !pass.match('[A-Z]')) {\r\n            return \"Password must contain lowercase and uppercase characters as well.\"\r\n        }\r\n        for (var c = 0; c < pass.length; c++) {\r\n            if(!'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._@+'.includes(pass[c])){\r\n                return(\"Invalid character in new password: \" + pass[c]);\r\n            }\r\n          }\r\n        return \"\";\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        setError(\"\");\r\n        setPasswordInvalid(\"\");\r\n        if(newPass !== newPassRe) {\r\n            setError(\"Password and confirmation doesnt match\");\r\n            return;\r\n        }\r\n        var x = validatePassword(newPass);\r\n        if(x !== \"\") {\r\n            setPasswordInvalid(x);\r\n            return;\r\n        }        \r\n        axiosInstance.defaults.headers[\"Authorization\"] = \"Bearer \" + props.token;\r\n        axiosInstance.post(\"user/\" + props.id + \"/changePassword\", {NewPassword: newPass, NewPasswordConfirm: newPassRe, OldPassword: oldPass} as  ChangePasswordDto)\r\n            .then(res => {\r\n                setErrorMsg(\"\");\r\n                resetPage();\r\n            })\r\n            .catch(err => {\r\n                setErrorMsg(err.response.data?.message);\r\n            })\r\n            .finally(() =>{\r\n                setOpen(true);\r\n            });\r\n    }\r\n\r\n    return(\r\n        <AccountPageWrapper header=\"Change Password\">\r\n            <div className=\"form-wrapper\">\r\n                <TextField id=\"old-pass-field\" label=\"Old password\" type=\"password\" variant=\"outlined\" value={oldPass} onChange={(e) => setOldPass(e.currentTarget.value)}/>\r\n                <TextField id=\"new-pass-field\"  error={passwordInvalid !== \"\"} label=\"New password\" type=\"password\" variant=\"outlined\" value={newPass} onChange={(e) => setNewPass(e.currentTarget.value)}/>\r\n                {passwordInvalid && <span className=\"error-text\">{passwordInvalid}</span>}\r\n                <TextField id=\"new-pass-re-field\" error={error !== \"\"} label=\"New password confirm\" type=\"password\" variant=\"outlined\" value={newPassRe} onChange={(e) => setNewPassRe(e.currentTarget.value)}/>\r\n                {error && <span className=\"error-text\">{error}</span>}\r\n                <Button className=\"change-button\" variant=\"outlined\" onClick={() => handleSubmit()}>Change</Button>\r\n                <Snackbar\r\n                    autoHideDuration={5000}\r\n                    open={open}\r\n                    onClose={() => setOpen(!open)}\r\n                >\r\n                    <Alert onClose={() => setOpen(!open)} severity={errorMsg !== \"\" ? \"error\" : \"success\"}>\r\n                    {errorMsg !== \"\" ? errorMsg : \"Password changed successfully\"}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </AccountPageWrapper>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): IMappedProps => {\r\n    return {\r\n        id: state.user.userId,\r\n        token: state.user.token\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport default connector(ChangePasswordPage);","import { Button, Snackbar, TextField } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport React, { useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport AccountPageWrapper from '../../../Components/AccountPageWrapper/AccountPageWrapper';\r\nimport { axiosInstance } from '../../../config/Axiosconfig';\r\nimport ChangePersonalDataDto from '../../../dtos/Account/ChangePersonalDataDto';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport { updateUserState, UserActionTypes } from '../../../redux/actions/userActions'\r\nimport './ChangePersonalDataPage.scss';\r\n\r\ninterface IMappedProps {\r\n    id: string;\r\n    token: string;\r\n    name: string;\r\n    email: string;\r\n    address: string;\r\n}\r\n\r\ntype Props = IMappedProps;\r\n\r\nfunction ChangePersonalDataPage(props: Props) {\r\n    const [name, setName] = useState(props.name);\r\n    const [email, setEmail] = useState(props.email);\r\n    const [address, setAddress] = useState(props.address);\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n    const dispatchH = useDispatch()\r\n\r\n    const validateEmail = (emailString: string): string => {\r\n        var reg = new RegExp(\"^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$\");\r\n        if (!reg.test(emailString))\r\n          return \"Invalid email format.\"\r\n        return \"\";\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        setEmailError(\"\");\r\n        var x = validateEmail(email);\r\n        if(x !== \"\") {\r\n            setEmailError(x);\r\n            return;\r\n        }\r\n        var newState = {Address: address, Email: email, Name: name} as  ChangePersonalDataDto        \r\n        axiosInstance.defaults.headers[\"Authorization\"] = \"Bearer \" + props.token;\r\n        axiosInstance.post(\"user/\" + props.id + \"/changeData\", newState)\r\n            .then(res => {\r\n                dispatchH(updateUserState(newState))\r\n                setErrorMsg(\"\");\r\n            })\r\n            .catch(err => {\r\n                setErrorMsg(err.response.data?.message);\r\n            })\r\n            .finally(() =>{\r\n                setOpen(true);\r\n            });\r\n    }\r\n\r\n    return(\r\n        <AccountPageWrapper header=\"Change Personal Data\">\r\n            <div className=\"personal-form-wrapper\">\r\n                <TextField id=\"name-field\" label=\"Name\" variant=\"outlined\" value={name} onChange={(e) => setName(e.currentTarget.value)}/>\r\n                <TextField id=\"email-field\"  error={emailError !== \"\"} label=\"Email\" variant=\"outlined\" value={email} onChange={(e) => setEmail(e.currentTarget.value)}/>\r\n                {emailError && <span className=\"error-text\">{emailError}</span>}\r\n                <TextField id=\"address-field\" label=\"Address\" variant=\"outlined\" value={address} onChange={(e) => setAddress(e.currentTarget.value)}/>\r\n                <Button className=\"change-button\" variant=\"outlined\" onClick={() => handleSubmit()}>Change</Button>\r\n                <Snackbar\r\n                    autoHideDuration={5000}\r\n                    open={open}\r\n                    onClose={() => setOpen(!open)}\r\n                >\r\n                    <Alert onClose={() => setOpen(!open)} severity={errorMsg !== \"\" ? \"error\" : \"success\"}>\r\n                    {errorMsg !== \"\" ? errorMsg : \"Data changed successfully\"}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n        </AccountPageWrapper>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): IMappedProps => {\r\n    return {\r\n        id: state.user.userId,\r\n        token: state.user.token,\r\n        address: state.user.address,\r\n        email: state.user.email,\r\n        name: state.user.name\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActionTypes>) =>\r\n  bindActionCreators(\r\n    {\r\n      updateUserState\r\n    },\r\n    dispatch\r\n);\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default connector(ChangePersonalDataPage);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport AccountPageWrapper from '../../../Components/AccountPageWrapper/AccountPageWrapper';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport './OverViewPage.scss';\r\n\r\ninterface IMappedProps {\r\n    email: string;\r\n    name: string;\r\n    address: string;\r\n}\r\n\r\nfunction OverViewPage(Props: IMappedProps){\r\n    return (\r\n        <AccountPageWrapper header=\"Overview\">\r\n            <div>\r\n                <div className=\"data-row\">\r\n                    <span>Name:</span>\r\n                    <span>{Props.name}</span>\r\n                </div>\r\n                <div className=\"data-row\">\r\n                    <span>Email:</span>\r\n                    <span>{Props.email}</span>\r\n                </div>\r\n                <div className=\"data-row\">\r\n                    <span>Address:</span>\r\n                    <span>{Props.address}</span>\r\n                </div>\r\n            </div>\r\n        </AccountPageWrapper>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): IMappedProps => {\r\n    return {\r\n        name: state.user.name,\r\n        email: state.user.email,\r\n        address: state.user.address\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\nexport default connector(OverViewPage);","export enum ReservationType {\r\n    Oneway = 0,\r\n    ByTheHour = 1,\r\n  }","import { Button, Card, CardContent } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AccountPageWrapper from '../../../Components/AccountPageWrapper/AccountPageWrapper';\r\nimport { axiosInstance } from '../../../config/Axiosconfig';\r\nimport { ReservationType } from '../../../config/Enums/ReservationType';\r\nimport ReservationDetailDto from '../../../dtos/Reservation/ReservationDetailDto';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport './MyReservationsPage.scss'\r\n\r\ninterface IMappedProps {\r\n    id: string;\r\n    token: string;\r\n}\r\n\r\nfunction MyReservationsPage(props: IMappedProps) {\r\n    var [myReservations, setReservations] = useState([] as ReservationDetailDto[]);\r\n    \r\n    useEffect(() => {\r\n        if(myReservations.length === 0) {\r\n        axiosInstance.defaults.headers[\"Authorization\"] = \"Bearer \" + props.token;\r\n        axiosInstance.get(\"/user/\" + props.id + \"/reservations\")\r\n            .then(res => {\r\n                setReservations(res.data);\r\n            })\r\n            .catch(err => {\r\n            })\r\n        }\r\n    })\r\n\r\n    const isNotPastCancelDate = (date: Date): boolean => {\r\n        var now = new Date();\r\n        var min = new Date(now.setHours(now.getHours() + 12));\r\n        return min < new Date(date);\r\n    }\r\n    \r\n    return (\r\n        <AccountPageWrapper header=\"My Reservations\">\r\n            <div className=\"reservation-wrapper\">\r\n                {myReservations.map(res => {\r\n                    console.log(res) \r\n                    return(\r\n                        <Card variant=\"outlined\">\r\n                            <CardContent>\r\n                                <div className=\"address-column\">\r\n                                    <div className=\"address-row\">\r\n                                        <span>From: </span>\r\n                                        <span>{ res.fromAddress }</span>\r\n                                    </div>\r\n                                    {res.reservationType === ReservationType.Oneway \r\n                                        ? (\r\n                                            <div className=\"address-row\">\r\n                                                <span>To:</span>\r\n                                                <span>{ res.toAddrress }</span>                                                                                    \r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className=\"address-row\">\r\n                                                <span>Duration:</span>\r\n                                                <span>{ res.duration }</span>                                                                                    \r\n                                            </div>\r\n                                        )}\r\n                                </div>\r\n                                <div className=\"preferences-column\">\r\n                                    <span>Preferences:</span>\r\n                                    {res.preferences.length !== 0 ? (\r\n                                    <ul>                                        \r\n                                        {res.preferences.map(pref => {\r\n                                            return (\r\n                                                <li>\r\n                                                    {pref}\r\n                                                </li>\r\n                                            )\r\n                                        })}\r\n                                    </ul>\r\n                                    ) : (\r\n                                        <span className=\"no-preference\">-</span>\r\n                                    )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"last-column\">\r\n                                    {isNotPastCancelDate(res.date) &&\r\n                                    <Button variant=\"outlined\">Cancel</Button>}\r\n                                    <span>Price: {res.price + \" \"} .-</span>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n        </AccountPageWrapper>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): IMappedProps => {\r\n    return {\r\n        id: state.user.userId,\r\n        token: state.user.token\r\n    }\r\n}\r\n\r\nconst connector = connect(mapStateToProps);\r\nexport default connector(MyReservationsPage);","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Switch } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AccountPageWrapper from '../../../Components/AccountPageWrapper/AccountPageWrapper';\r\nimport { axiosInstance } from '../../../config/Axiosconfig';\r\nimport { RootState } from '../../../redux/reducers/rootReducer';\r\nimport './SettingsPage.scss'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { clearUserState, UserActionTypes } from '../../../redux/actions/userActions';\r\n\r\ninterface IMappedProps {\r\n    token: string;\r\n    id: string;\r\n}\r\n\r\ninterface IDispatchedProps {\r\n    clearUserState: () => void;\r\n}\r\n\r\ntype Props = IMappedProps & IDispatchedProps;\r\n\r\nfunction SettingsPage(props: Props) {\r\n    const [emailChecked, setEmailChecked] = useState(false);\r\n    const [init, setInit] = useState(true);\r\n    const [openConfirm, setOpenConfirm] = useState(false);\r\n    const [logoutRedirect, setLogoutRedirect] = useState(false);\r\n\r\n    const tryDeleteAccount = () => {\r\n        axiosInstance.delete(\"/user/\" + props.id)\r\n            .then(res => {\r\n                sessionStorage.clear();\r\n                setLogoutRedirect(true);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(init) {\r\n            setInit(false);\r\n            axiosInstance.defaults.headers[\"Authorization\"] = \"Bearer \" + props.token;\r\n            axiosInstance.get(\"/user/\" + props.id + \"/settings\")\r\n                .then(res => {\r\n                    setEmailChecked(res.data.allowEmails);\r\n                })\r\n        }\r\n        if(logoutRedirect) {\r\n            setLogoutRedirect(false);\r\n            props.clearUserState();\r\n        }\r\n    })\r\n\r\n    const trySetEmailChecked = () => {\r\n        axiosInstance.post(\"/user/\" + props.id + \"/emailNotifications\")\r\n            .then(res => {\r\n                setEmailChecked(!emailChecked)\r\n            })\r\n            .catch(err => {\r\n\r\n            });\r\n    }\r\n    \r\n    return(\r\n        <AccountPageWrapper header=\"Settings\">\r\n            <div className=\"settings-root\">\r\n                <div className=\"switch-gorup\">\r\n                    <span>Email notifications:</span>\r\n                    <Switch\r\n                        checked={emailChecked}\r\n                        onChange={() => trySetEmailChecked()}\r\n                        color=\"primary\"\r\n                    />\r\n                </div>\r\n                <Button \r\n                    className=\"delete-button\"\r\n                    variant=\"contained\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={() => setOpenConfirm(true)}>\r\n                    Delete Account\r\n                </Button>\r\n                <Dialog\r\n                    open={openConfirm}\r\n                    onClose={() => setOpenConfirm(false)}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Confirm account deletion\"}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Are you sure? this cannot be undone!\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => setOpenConfirm(false)} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            className=\"delete-button\"\r\n                            onClick={tryDeleteAccount}\r\n                            >\r\n                            Delete\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        </AccountPageWrapper>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): IMappedProps => {\r\n    return { \r\n        token: state.user.token ,\r\n        id: state.user.userId\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActionTypes>) =>\r\n    bindActionCreators(\r\n      {\r\n        clearUserState\r\n      },\r\n      dispatch\r\n    );\r\nconst connector = connect(mapStateToProps,mapDispatchToProps)\r\n\r\nexport default connector(SettingsPage);","import { Button, Card, Snackbar, TextField } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RootState } from '../../redux/reducers/rootReducer';\r\nimport './ContactPage.scss'\r\n\r\ninterface IMappedProps {\r\n    email: string;\r\n    token: string;\r\n}\r\n\r\nfunction ContactPage() {\r\n\r\n    const [reason, setReason] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const sendContactMessage = () => {\r\n        if(reason.length < 3) {\r\n            setError(\"Reason too short\");\r\n            return;\r\n        }\r\n        if(message.length < 8) {\r\n            setError(\"Message too short\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact-page-wrapper\">\r\n            <h1>Contact Us</h1>\r\n            <Card className=\"contact-card\">\r\n                <div>\r\n                    <span>\r\n                        Reason:\r\n                    </span>\r\n                    <TextField \r\n                        className=\"reason-input\"\r\n                        variant=\"outlined\"\r\n                        value={reason}\r\n                        onChange={(e) => setReason(e.currentTarget.value)}/>\r\n                </div>\r\n                <div>\r\n                    <span>\r\n                        Message:\r\n                    </span>\r\n                    <TextField \r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={20}\r\n                        value={message}\r\n                        onChange={(e) => setMessage(e.currentTarget.value)}/>\r\n                </div>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    onClick={sendContactMessage}>\r\n                    Send\r\n                </Button>\r\n            </Card>            \r\n            <Snackbar\r\n                    autoHideDuration={5000}\r\n                    open={error !== \"\"}\r\n                    onClose={() => setError(\"\")}\r\n                >\r\n                    <Alert onClose={() => setError(\"\")} severity=\"error\">\r\n                        {error}\r\n                    </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): IMappedProps => {\r\n    return {\r\n      token: state.user.token,\r\n      email: state.user.email\r\n    }\r\n  }\r\n\r\nconst connector = connect(mapStateToProps);\r\nexport default connector(ContactPage);","import { Button, Container, CssBaseline, Grid, Link, makeStyles, Snackbar, TextField, Typography } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport React, { useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { axiosInstance } from '../../config/Axiosconfig';\r\nimport UserLoginDto from '../../dtos/User/UserLoginDto';\r\nimport { saveToken, UserActionTypes } from '../../redux/actions/userActions';\r\nimport { RootState } from '../../redux/reducers/rootReducer';\r\nimport './LoginPage.scss'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: \"20px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\ninterface Mapped {\r\n  token: string;\r\n}\r\n\r\nfunction LoginPage(props: Mapped) {\r\n  const classes = useStyles();\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [errorMsg, setError] = useState(\"\");\r\n\r\n  const dispatchH = useDispatch();\r\n\r\n  const tryLogin = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    var data: UserLoginDto = {\r\n      Email: email,\r\n      Password: pass\r\n    }\r\n    axiosInstance.post(\"user/login\", data)\r\n      .then(response => {\r\n        axiosInstance.defaults.headers[\"Authorization\"] = \"Bearer \" + response.data\r\n        dispatchH(saveToken(response.data));\r\n        setRedirect(true);\r\n      })\r\n      .catch(error => {\r\n        if (error.response?.status === 404) {\r\n          setError(\"Unknown error occured\");\r\n        }\r\n        else {\r\n          if (error.response?.data !== undefined) {\r\n            setError(error.response.data);\r\n          }\r\n          else {\r\n            setError(\"Cannot reach server\");\r\n          }\r\n        }\r\n        setOpen(true);\r\n      })\r\n  }\r\n\r\n  if (redirect) {\r\n    return (<Redirect to=\"/home\" />)\r\n  }\r\n  else\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n          <div className={classes.paper}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                value={email}\r\n                onChange={(e) => { setEmail(e.currentTarget.value) }}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={pass}\r\n                onChange={(e) => { setPass(e.currentTarget.value) }}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n                onClick={(e) => tryLogin(e)}\r\n              >\r\n                Sign In\r\n              </Button>\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={() => { setRedirect(true) }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    Forgot password?\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"/register\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n        <Snackbar\r\n          open={open}\r\n          onClose={() => setOpen(!open)}\r\n        >\r\n          <Alert onClose={() => setOpen(!open)} severity=\"error\">\r\n            {errorMsg}\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActionTypes>) =>\r\n  bindActionCreators(\r\n    {\r\n      saveToken\r\n    },\r\n    dispatch\r\n);\r\n\r\nconst mapStateToProps = (state: RootState): Mapped => {\r\n  return {\r\n    token: state.user.token\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginPage);\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Redirect } from \"react-router\";\r\nimport UserRegisterDto from \"../../dtos/User/UserRegisterDto\"\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport './RegisterPage.scss'\r\nimport { axiosInstance } from \"../../config/Axiosconfig\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function RegisterPage() {\r\n  const classes = useStyles();\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailRe, setEmailRe] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [passRe, setPassRe] = useState(\"\");\r\n  const [spam, setSpam] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [errorMsg, setError] = useState(\"\");\r\n\r\n  const tryRegister = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault();\r\n    var errors = \"\";\r\n    var reg = new RegExp(\"^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$\");\r\n    if (!reg.test(email))\r\n      errors += \"Invalid email format.\\n\"\r\n    if(name === \"\")\r\n      errors += \"Name is required.\\n\"\r\n    if(email !== emailRe)\r\n      errors += \"Email and confirmation doesn't match.\\n\"\r\n    if(pass !== passRe)\r\n      errors += \"Password and confirmation doesn't match.\\n\"\r\n    if(errors !== \"\"){\r\n      setError(errors)\r\n      setOpen(true);\r\n      return;\r\n    }\r\n\r\n    var data: UserRegisterDto = {\r\n      Email: email,\r\n      EmailRe: emailRe,\r\n      Password: pass,\r\n      AllowSpam: spam,\r\n      Name: name,\r\n      PasswordRe: passRe\r\n    }\r\n    axiosInstance.post(\"user/register\", data)\r\n      .then(response => {\r\n        setSuccess(true);\r\n      })\r\n      .catch(error => {\r\n        if(error.response?.status === 404){\r\n          setError(\"Unknown error occured\");\r\n        }\r\n        else {\r\n          if(error.response?.data !== undefined){\r\n            setError(error.response.data);\r\n          }          \r\n          else{\r\n            setError(\"Cannot reach server\");\r\n          }\r\n        }        \r\n        setOpen(true); \r\n      })\r\n  }\r\n\r\n  if(success){\r\n    return <Redirect to=\"/login\" />;\r\n  } else {\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  } else {\r\n        return (\r\n        <div>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                Sign up\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        autoComplete=\"name\"\r\n                        name=\"Name\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"Name\"\r\n                        label=\"Name\"\r\n                        autoFocus\r\n                        value={name}\r\n                        onChange={(e) => setName(e.currentTarget.value)}\r\n                    />\r\n                    </Grid>                \r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.currentTarget.value)}\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"emailRe\"\r\n                        label=\"Email Address confirmation\"\r\n                        autoComplete=\"none\"\r\n                        name=\"emailRe\"\r\n                        value={emailRe}\r\n                        onChange={(e) => setEmailRe(e.currentTarget.value)}\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={pass}\r\n                        onChange={(e) => setPass(e.currentTarget.value)}\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"passwordRe\"\r\n                        label=\"Password confirmation\"\r\n                        type=\"password\"\r\n                        id=\"passwordRe\"\r\n                        value={passRe}\r\n                        onChange={(e) => setPassRe(e.currentTarget.value)}\r\n                    />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={\r\n                        <Checkbox value=\"allowExtraEmails\" color=\"secondary\" checked={spam} onChange={(e) => setSpam(!spam)}/>\r\n                        }\r\n                        label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                    />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={classes.submit}\r\n                    onClick={(e) => tryRegister(e)}\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={() => {\r\n                    setRedirect(true);\r\n                    }}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n                <Grid container justify=\"flex-end\">\r\n                    <Grid item>\r\n                    <Link href=\"/login\" variant=\"body2\">\r\n                        Already have an account? Sign in\r\n                    </Link>\r\n                    </Grid>\r\n                </Grid>\r\n                </form>\r\n            </div>\r\n            </Container>\r\n            <Snackbar\r\n            open={open}\r\n            onClose={() => setOpen(!open)}\r\n            >\r\n            <Alert onClose={() => setOpen(!open)} severity=\"error\" className=\"error-dialog\">\r\n                {errorMsg}\r\n            </Alert>\r\n            </Snackbar>\r\n        </div>\r\n        );\r\n    }\r\n  }\r\n}\r\n","export enum CarType {\r\n    Executive = 0,\r\n    Luxury = 1,\r\n    SevenSeater = 2\r\n  }","export const apiKey = \"AIzaSyDTwayprqd-pYQE82aU5iYKkIDcyXMIFMY&libraries=places\";","import React from 'react';\nimport \"./ReservationPage.scss\";\nimport {\n  MuiPickersUtilsProvider,\n  DateTimePicker,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { Container, Grid, Snackbar, Checkbox, Button, TextField } from \"@material-ui/core\";\nimport { axiosInstance } from \"../../config/Axiosconfig\";\nimport { Redirect, RouteComponentProps} from \"react-router-dom\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { connect } from \"react-redux\";\nimport { RootState } from \"../../redux/reducers/rootReducer\";\nimport {  Dispatch } from 'redux';\nimport { CarType } from '../../config/Enums/CarType';\nimport { ReservationType } from '../../config/Enums/ReservationType';\nimport { Preference } from '../../config/Interfaces/Preference';\nimport ReservationPriceDto from '../../dtos/Reservation/ReservationPriceDto';\nimport { apiKey } from '../../config/Googleconfig';\nimport 'bootstrap'\nimport ReservationDto from '../../dtos/Reservation/ReservationDto';\n\nexport interface DispatchedProps {\n  mock: any;\n}\nexport const getMinDate = (): Date => {\n  var now = new Date();\n  var min = now.setHours(now.getHours() + 12);\n  return new Date(min);\n};\nconst getSettableMinDate = (): Date => {\n  var now = new Date();\n  var min = now.setHours(now.getHours() + 11.8);  \n  return new Date(min);\n};\n\nexport interface IReservationPageState {\n  date: Date;\n  selectedType?: CarType;\n  origin: string;\n  destination: string;\n  open: boolean;\n  errorMsg: string;\n  tab: ReservationType;\n  time: number;\n  price?: number;\n  preferences: Preference[];\n  comment: string;\n  summary: boolean;\n}\nconst initialState: IReservationPageState = { \n  date: getMinDate(),\n  destination: \"\",\n  errorMsg: \"\",\n  open: false,\n  origin: \"\",\n  preferences: [],\n  summary: false,\n  tab: ReservationType.Oneway,\n  time: 0,\n  price: undefined,\n  selectedType: undefined,\n  comment: \"\",\n}\n\ninterface IMappedProps{\n  token: string;\n}\n\ninterface OwnProps {\n  scrollTo?: string;\n}\n\ntype Props = DispatchedProps & IMappedProps & RouteComponentProps<OwnProps>;\n\nclass ReservationPage extends React.Component<Props, IReservationPageState> {\n  /**\n   *\n   */\n  constructor(props: Props) {\n    super(props);\n    this.state = initialState;\n    axiosInstance.defaults.headers[\"Authorization\"] = \"Bearer \" + props.token;\n    axiosInstance.get(\"preferences\")\n      .then(res => {\n        this.setState({preferences: res.data});\n      });\n  }\n\n  autocompleteOrigin?: google.maps.places.Autocomplete;\n  autocompleteDestination?: google.maps.places.Autocomplete;\n  autocompleteOriginByTheHour?: google.maps.places.Autocomplete;\n\n  //Initializes the autocomplete fields\n  initAutocomplete = () => {\n    // Create the autocomplete object, restricting the search predictions to\n    // geographical location types.\n    var element = document.getElementById(\"origin-oneway\") as HTMLInputElement;\n    this.autocompleteOrigin = new window.google.maps.places.Autocomplete(element, {    \n      componentRestrictions: {\n        country: 'hu'\n      }\n    });\n\n    // Avoid paying for data that you don't need by restricting the set of\n    // place fields that are returned to just the address components.\n    this.autocompleteOrigin.setFields([\"address_component\"]);\n    this.autocompleteOrigin.addListener(\"place_changed\", this.handleOriginChange);\n\n    this.autocompleteDestination = new window.google.maps.places.Autocomplete(\n      document.getElementById(\"destination-oneway\") as HTMLInputElement,\n      {\n      componentRestrictions: {\n        country: 'hu'\n      }}\n    );\n\n    this.autocompleteDestination.setFields([\"address_component\"]);\n    this.autocompleteDestination.addListener(\"place_changed\", this.handleDestinationChange);\n\n    element = document.getElementById(\"origin-bythehour\") as HTMLInputElement;\n    this.autocompleteOriginByTheHour = new window.google.maps.places.Autocomplete(element, {    \n      componentRestrictions: {\n        country: 'hu'\n      }\n    });\n\n    // Avoid paying for data that you don't need by restricting the set of\n    // place fields that are returned to just the address components.\n    this.autocompleteOriginByTheHour.setFields([\"address_component\"]);\n    this.autocompleteOriginByTheHour.addListener(\"place_changed\", this.handleOriginChange);\n  }\n\n  //If the user allowed geolocation set the bounds of the search\n  geolocate = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        var geolocation = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        };\n        var circle = new window.google.maps.Circle({\n          center: geolocation,\n          radius: position.coords.accuracy < 100000 ? position.coords.accuracy : 100000,\n        });\n        this.autocompleteOrigin?.setBounds(circle.getBounds());        \n        this.autocompleteDestination?.setBounds(circle.getBounds()); \n        this.autocompleteOriginByTheHour?.setBounds(circle.getBounds()); \n      });\n    }\n  }\n\n  //Initializes the tabs, and autocomplete fields\n  initialize = () => {\n    this.initAutocomplete();\n    this.geolocate();\n  \n    if(this.state.tab === ReservationType.Oneway) {\n      var origin = document.getElementById(\"origin-oneway\") as HTMLInputElement;\n      origin.disabled = false;\n      var dest = document.getElementById(\"destination-oneway\") as HTMLInputElement;\n      dest.disabled = false;\n    }\n    else {\n      var origin = document.getElementById(\"origin-bythehour\") as HTMLInputElement;\n      origin.disabled = false;\n    }\n  }\n\n  //Called when the user focuses an autocomplete field\n  startAutoSession = (e: React.FocusEvent<HTMLInputElement>) => {\n    if(e.currentTarget.id === \"origin-oneway\") {\n      (document.getElementById(\"origin-oneway\") as HTMLInputElement).className = \"col-md-4\"; \n    }\n    if(e.currentTarget.id === \"destination-oneway\") {\n      (document.getElementById(\"destination-oneway\") as HTMLInputElement).className = \"col-md-4\"; \n    }\n    if(e.currentTarget.id === \"origin-bythehour\") {\n      (document.getElementById(\"origin-bythehour\") as HTMLInputElement).className = \"col-md-4\";\n    } \n  }\n\n  //Pure js tab switching instead of routing\n  switchTab = (\n    evt: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,\n    tabName: string,\n    init: boolean = false\n  ) => {\n    // Declare all variables\n    var i, tabcontent, tablinks;\n\n    // Get all elements with class=\"tabcontent\" and hide them\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\n    for (i = 0; i < tabcontent.length; i++) {\n      (tabcontent[i] as HTMLElement).style.display = \"none\";\n    }\n\n    // Get all elements with class=\"tablinks\" and remove the class \"active\"\n    tablinks = document.getElementsByClassName(\"tablinks\");\n    for (i = 0; i < tablinks.length; i++) {\n      tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n    }\n\n    // Show the current tab, and add an \"active\" class to the button that opened the tab\n    (document.getElementById(tabName) as HTMLElement).style.display = \"block\";\n    if (evt != null) {\n      if (evt.currentTarget !== null)\n        (evt.currentTarget as HTMLElement).className += \" active\";\n    } else {\n      if(this.state.tab === ReservationType.Oneway)\n        tablinks[0].className += \" active\";\n      else\n        tablinks[1].className += \" active\";\n    }\n\n    if(!init) {\n      if (tabName === \"oneway\") this.setState({ tab: ReservationType.Oneway });\n      else this.setState({ tab: ReservationType.ByTheHour });\n    }\n  };\n\n  getPrice = () => {   \n    if (this.state.tab === ReservationType.Oneway) {\n       //Google Autocomple is not a react Native element\n      var origin = (document.getElementById(\n        \"origin-oneway\"\n      ) as HTMLInputElement).value;\n      var destination = (document.getElementById(\n        \"destination-oneway\"\n      ) as HTMLInputElement).value;\n\n      this.setState({origin: origin, destination: destination});\n      if(this.state.selectedType === undefined) {\n        this.setState({errorMsg: \"You must select a car type\", open: true});\n        return;\n      }\n      var data: ReservationPriceDto = {\n        FromAddress: origin,\n        ToAddrress: destination,\n        ReservationType: ReservationType.Oneway,\n        CarType: this.state.selectedType,\n        PreferenceIds: this.state.preferences.map(x => x.id),\n        Duration: undefined\n      };\n\n      axiosInstance\n        .post<number>(\"reservation/price\", data)\n        .then((res) => {\n          this.setState({price: res.data});\n        })\n        .catch((error) => {\n          if(error.response?.status === 404){\n            this.setState({errorMsg: \"Unknown error occured\", open: true});\n          } else {\n            if(error.response?.data !== undefined){\n              this.setState({errorMsg: error.response.data.message, open: true})\n            }          \n            else{\n              this.setState({errorMsg: \"Cannot reach server\", open: true})\n            }\n          }\n        });\n    } else {\n      var origin = (document.getElementById(\n        \"origin-bythehour\"\n      ) as HTMLInputElement).value;\n\n      var hours = (document.getElementById(\"duration\") as HTMLSelectElement)\n        .value;\n\n      this.setState({origin: origin, time: +hours});\n      if(this.state.selectedType === undefined) {\n        this.setState({errorMsg: \"You must select a car type\", open: true});\n      }\n\n      var data: ReservationPriceDto = {\n        FromAddress: origin,\n        ToAddrress: \"\",\n        ReservationType: ReservationType.ByTheHour,\n        Duration: +hours,\n        CarType: this.state.selectedType as CarType,\n        PreferenceIds: this.state.preferences.map(x => x.id)\n      };\n\n      axiosInstance\n        .post<number>(\"reservation/price\", data )\n        .then((res) => {          \n          this.setState({price: res.data});\n        })\n        .catch((error) => {\n          if(error.response?.status === 404){\n            this.setState({errorMsg: \"Unknown error occured\", open: true});\n          }\n          else {\n            if(error.response?.data !== undefined){\n              this.setState({errorMsg: error.response.data.message, open: true});\n            }          \n            else{\n              this.setState({errorMsg: \"Cannot reach server\", open: true});\n            }\n          }\n        });\n    }    \n  };\n\n  handleDateChange = (date: any) => {    \n    this.setState({ date: date });\n  };\n\n  onSelectClick = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    switch (this.state.selectedType) {\n      case CarType.Executive:\n        var element = document.getElementById(\"executive-card\");\n        if (element != null) {\n          element.className = \"price\";\n        }\n        break;\n      case CarType.Luxury:\n        var element = document.getElementById(\"luxury-card\");\n        if (element != null) {\n          element.className = \"price\";\n        }\n        break;\n      case CarType.SevenSeater:\n        var element = document.getElementById(\"sevenSeater-card\");\n        if (element != null) {\n          element.className = \"price\";\n        }\n        break;\n      default:\n        break;\n    }\n    console.log(event.currentTarget.id);\n    switch (event.currentTarget.id) {      \n      case \"executive\": {\n        var element = document.getElementById(\"executive-card\");\n        if (element != null) {\n          element.className = \"price price-selected\";\n        }\n        this.setState({ selectedType: CarType.Executive});\n        break;\n      }\n      case \"luxury\": {\n        var element = document.getElementById(\"luxury-card\");\n        if (element != null) {\n          element.className = \"price price-selected\";\n        }\n\n        this.setState({ selectedType: CarType.Luxury });\n        break;\n      }\n      case \"sevenSeater\": {\n        var element = document.getElementById(\"sevenSeater-card\");\n        if (element != null) {\n          element.className = \"price price-selected\";\n        }\n\n        this.setState({ selectedType: CarType.SevenSeater });\n        break;\n      }\n      default: {\n        this.setState({ selectedType: undefined, price: undefined });\n        break;\n      }\n    }\n  };  \n\n  submit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    var error = false;    \n    if(this.state.date < getMinDate()){\n      var x = document.getElementById(\"date-picker\");\n      x?.scrollIntoView({behavior:\"smooth\", block:\"center\"})\n      error = true;\n      this.setState({open: true, errorMsg: \"Yout can only make reservations 12 hours in advance.\"})\n    }\n\n    if(this.state.selectedType === undefined) {\n      error = true;\n      this.setState({open: true, errorMsg: \"Please select car type.\"})\n    }\n\n    if(!this.state.price)\n    {\n      error = true;\n        this.setState({\n          open: true,\n          errorMsg: \"Please search for a valid route\",\n        });\n    }\n\n    var origin;\n    var destination;\n\n    if (this.state.tab === ReservationType.Oneway) {\n      origin = document.getElementById(\"origin-oneway\") as HTMLInputElement;\n      destination = document.getElementById(\"destination-oneway\") as HTMLInputElement;\n\n      if (destination.value.length === 0) {\n        error = true;\n        this.setState({\n          open: true,\n          errorMsg: \"Destination address cannot be empty.\",\n        });\n        destination.className +=\" error\";\n        destination.scrollIntoView({behavior: \"smooth\",block: \"center\"});\n      }\n\n      if (origin.value.length === 0) {\n        error = true;\n        this.setState({\n          open: true,\n          errorMsg: \"Origin address cannot be empty.\",\n        });\n        origin.className +=\" error\";\n        origin.scrollIntoView({behavior: \"smooth\",block: \"center\"});\n      }\n    } else {\n      origin = (document.getElementById(\"origin-bythehour\") as HTMLInputElement);\n      if (origin.value.length === 0) {\n        error = true;\n        this.setState({\n          open: true,\n          errorMsg: \"Origin address cannot be empty.\",\n        });\n        origin.className +=\" error\";\n        origin.scrollIntoView({behavior: \"smooth\",block: \"center\"});\n      }\n    }\n    var prefs = this.state.preferences.filter(p => p.value).map(p => p.id);\n    if(!error) {\n      var data = {\n        CarType: this.state.selectedType,\n        Comment: this.state.comment,\n        Date: this.state.date.getFullYear() + \"/\" + (this.state.date.getMonth() + 1) + \"/\" + this.state.date.getDate() + \" \" + (this.state.date.getHours() % 12) + \":\" + (this.state.date.getMinutes() < 10 ? (\"0\"+this.state.date.getMinutes()) : this.state.date.getMinutes()) + (this.state.date.getHours() >= 12 ? ' pm' : ' am'),\n        FromAddress: origin.value,\n        PreferenceIds: prefs,\n        ReservationType: this.state.tab,\n        ToAddrress: destination?.value ?? \"\",\n        Duration: this.state.time\n      } as ReservationDto;\n      debugger;\n      axiosInstance.post(\"reservation/make\", data)\n        .then(res => {\n          //TODO: redirect to payment page\n          this.setState({summary: true});\n          this.saveState();\n        })\n        .catch(err => {\n          this.setState({\n            open: true,\n            errorMsg: err.response.data.message,\n          });\n        })\n    }\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  saveState = (e?: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => { \n    e?.preventDefault();    \n  }\n\n  handlePrefChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n    var temp = this.state.preferences;\n    var index = temp.findIndex(pref => pref.text == e.currentTarget.id);\n    temp[index].value = !temp[index].value\n    this.setState({preferences: temp});\n  }\n\n  handleOriginChange =(e: React.ChangeEvent<HTMLInputElement>) => {    \n    this.setState({origin: e?.currentTarget.value})    \n  }\n\n  handleDestinationChange =(e: React.ChangeEvent<HTMLInputElement>) => {    \n    this.setState({destination: e?.currentTarget.value})\n  }\n\n  handleCommentChange = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    this.setState({comment: e.currentTarget.value})\n  }\n\n  componentDidMount() {\n    if(this.state.tab === ReservationType.Oneway) {\n    var origin = document.getElementById(\"origin-oneway\") as HTMLInputElement;\n    origin.disabled = true;\n\n    var dest = document.getElementById(\n      \"destination-oneway\"\n    ) as HTMLInputElement;\n    dest.disabled = true;\n    }\n    else {\n      var origin = document.getElementById(\"origin-bythehour\") as HTMLInputElement;\n      origin.disabled = true;\n    }\n\n    var scrpt = document.getElementById(\"googleScript\");\n    if(scrpt !== null )\n      scrpt.remove();\n    const script = document.createElement(\"script\");\n    script.id = \"googleScript\";\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}`;\n    script.async = true;\n    script.defer = true;\n    script.addEventListener(\"load\", () => {\n      this.initialize();\n    });\n    document.body.appendChild(script);\n\n    this.state.tab === ReservationType.Oneway ?\n      this.switchTab(null, \"oneway\", true)\n      : this.switchTab(null, \"bythehour\", true);    \n  }\n\n  componentDidUpdate(){\n    var x = document.getElementById((this.props.location.state as OwnProps)?.scrollTo as string);\n    if(x) {\n      x?.scrollIntoView({behavior: \"smooth\", block: \"center\"})  \n      this.props.history.replace(this.props.location.pathname,{});\n    }\n  }\n\n  render() {\n    if(this.state.summary)\n      return <Redirect to=\"/summary\"/>    \n    else {\n      return (\n        <div className=\"container-width\">\n          <div>\n            <div className=\"tab\">\n              <button\n                className=\"tablinks\"\n                onClick={(event) => {\n                  this.switchTab(event, \"oneway\");\n                }}\n              >\n                One-Way\n              </button>\n              <button\n                className=\"tablinks\"\n                onClick={(event) => {\n                  this.switchTab(event, \"bythehour\");\n                }}\n              >\n                By The Hour\n              </button>\n            </div>        \n\n            <Container id=\"oneway\" className=\"tabcontent\" maxWidth=\"xl\">\n              <div className=\"row\">            \n                <input\n                  className=\"col-md-4\"\n                  id=\"origin-oneway\"\n                  value={this.state.origin}\n                  onChange={(e) => this.handleOriginChange(e)}\n                  placeholder=\"From\"\n                  onFocus={(e) => this.startAutoSession(e)}              \n                  type=\"text\"\n                />\n                <input\n                  id=\"destination-oneway\"\n                  placeholder=\"To\"\n                  value={this.state.destination}\n                  onChange={(e) => this.handleDestinationChange(e)}\n                  type=\"text\"\n                  onFocus={(e) => this.startAutoSession(e)}\n                  className=\"col-md-4\"\n                />\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <DateTimePicker\n                    ampm={true}\n                    strictCompareDates\n                    className=\"col-md datepicker\"\n                    minDate={getSettableMinDate()}\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy h:mm a\"\n                    margin=\"normal\"\n                    id=\"date-picker\"\n                    label=\"Date\"\n                    value={this.state.date}\n                    onChange={(v) => this.handleDateChange(v)}\n                  />\n                </MuiPickersUtilsProvider>                \n              </div>\n            </Container>\n\n            <Container id=\"bythehour\" className=\"tabcontent\"  maxWidth=\"xl\">\n              <div className=\"row\">\n                <input\n                  className=\"col-md-4\"\n                  id=\"origin-bythehour\"\n                  value={this.state.origin}\n                  onChange={(e) => this.handleOriginChange(e)}\n                  placeholder=\"From\"\n                  onFocus={(e) => this.startAutoSession(e)}\n                  type=\"text\"\n                />\n                <select\n                  name=\"duration\"\n                  id=\"duration\"\n                  className=\"hour-select col-md-2\"\n                >\n                  <option value=\"3\">3 hours</option>\n                  <option value=\"4\">4 hours</option>\n                  <option value=\"5\">5 hours</option>\n                  <option value=\"6\">6 hours</option>\n                  <option value=\"7\">7 hours</option>\n                  <option value=\"8\">8 hours</option>\n                </select>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <DateTimePicker\n                    ampm={true}\n                    strictCompareDates                  \n                    className=\"col-md datepicker\"\n                    minDate={getSettableMinDate()}             \n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy hh:mm\"\n                    margin=\"normal\"\n                    id=\"date-picker\"\n                    label=\"Date\"\n                    value={this.state.date}\n                    onChange={this.handleDateChange}\n                  />\n                </MuiPickersUtilsProvider>\n              </div>\n            </Container>\n          </div>       \n\n          <div id=\"typeContainer\">\n            <div className=\"typeContainer mb-4\">\n              <Grid container spacing={6}>\n                <Grid item md={4} className=\"typeCard\">\n                  <ul className=\"price\" id=\"executive-card\">\n                    <li className=\"header\">Executive</li>\n                    <li className=\"grey\">\n                      <div id=\"execprice\"></div>\n                    </li>\n                    <li>\n                      <img\n                        src={require('../../resources/images/executive/mercedes_e.jpg').default}\n                        className=\"car\"\n                      />\n                    </li>\n                    <li>Max 4 passengers</li>\n                    <li className=\"grey\">\n                      <a\n                        id=\"executive\"\n                        className=\"button\"\n                        onClick={(e) => this.onSelectClick(e)}\n                      >\n                        Select\n                      </a>\n                    </li>\n                  </ul>\n                </Grid>\n\n                <Grid item md={4} className=\"typeCard\">\n                  <ul className=\"price\" id=\"luxury-card\">\n                    <li className=\"header\">Luxury</li>\n                    <li className=\"grey\">\n                      <div id=\"luxprice\"></div>\n                    </li>\n                    <li>\n                      <img\n                        src={require(\"../../resources/images/luxury/mercedes_s.png\").default}\n                        className=\"car\"\n                      />\n                    </li>\n                    <li>Max 4 passengers</li>\n                    <li className=\"grey\">\n                      <a\n                        id=\"luxury\"\n                        className=\"button\"\n                        onClick={(e) => this.onSelectClick(e)}\n                      >\n                        Select\n                      </a>\n                    </li>\n                  </ul>\n                </Grid>\n\n                <Grid item md={4} className=\"typeCard\">\n                  <ul className=\"price\" id=\"sevenSeater-card\">\n                    <li className=\"header\">7 seater</li>\n                    <li className=\"grey\">\n                      <div id=\"7seaterprice\"></div>\n                    </li>\n                    <li>\n                      <img\n                        src={require(\"../../resources/images/7seater/mercedes_v.jpg\").default}\n                        className=\"car\"\n                      />\n                    </li>\n                    <li>Max 7 passengers</li>\n                    <li className=\"grey\">\n                      <a\n                        id=\"sevenSeater\"\n                        className=\"button\"\n                        onClick={(e) => this.onSelectClick(e)}\n                      >\n                        Select\n                      </a>\n                    </li>\n                  </ul>\n                </Grid>\n              </Grid>\n            </div>              \n            <div>\n              <Container>\n                {this.state.preferences.map(pref => {\n                  return (\n                  <div className=\"pref-row\">\n                    <Checkbox\n                      id={pref.text}\n                      checked={pref.value}\n                      onChange={(e) => this.handlePrefChange(e)}\n                      inputProps={{ \"aria-label\": \"Checkbox A\" }}\n                    />\n                    <span>{pref.text}</span>\n                  </div>\n                  )}\n                )}\n                <TextField \n                  className=\"comment-box\"\n                  label=\"Comment\" \n                  value={this.state.comment} \n                  onChange={(e) => this.handleCommentChange(e)}\n                  fullWidth={true}\n                  multiline={true}\n                  rows={15}\n                  rowsMax={15}>\n                </TextField>\n                <input\n                  className=\"searchButton\"\n                  id=\"search-oneway\"\n                  type=\"button\"\n                  value=\"Calculate\"\n                  onClick={() => this.getPrice()}\n                /> \n                <span>{this.state.price ?? \"xxx\"} .-</span>               \n                             \n              <div className=\"d-md-flex justify-content-md-end mt-3 form-end\">                \n                <Button\n                  className=\"continueButton\"\n                  id=\"continue-button\"                  \n                  onClick={(e) => this.submit(e)}\n                >\n                  Make Reservation\n                </Button>\n              </div>     \n            </Container>           \n            </div>\n          </div>                \n          <Snackbar\n            open={this.state.open}\n            autoHideDuration={6000}\n            onClose={this.handleClose}\n          >\n            <Alert onClose={this.handleClose} severity=\"error\">\n              {this.state.errorMsg}\n            </Alert>\n          </Snackbar>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state: RootState): IMappedProps => {\n  return{ token: state.user.token }\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n \n}\nconst connector = connect(mapStateToProps)\n\nexport default connector(ReservationPage);\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport FooterComponent from './Components/Footer/FooterComponent';\r\nimport HeaderComponent from './Components/Header/HeaderComponent';\r\nimport ChangePasswordPage from './Pages/Account/ChangePasswordPage/ChangePasswordPage';\r\nimport ChangePersonalDataPage from './Pages/Account/ChangePersonalData/ChangePersonalDataPage';\r\nimport OverViewPage from './Pages/Account/Overview/OverViewPage'\r\nimport MyReservationsPage from './Pages/Account/Reservations/MyReservationsPage';\r\nimport SettingsPage from './Pages/Account/Settings/SettingsPage';\r\nimport ContactPage from './Pages/ContactPage/ContactPage';\r\nimport LoginPage from './Pages/Login/LoginPage';\r\nimport RegisterPage from './Pages/Register/RegisterPage';\r\nimport ReservationPage from './Pages/Reservation/ReservationPage';\r\nimport { RootState } from './redux/reducers/rootReducer';\r\n\r\ninterface IMappedState{\r\n    token:string;\r\n}\r\n\r\nfunction RouterPage(props: IMappedState){    \r\n    return(\r\n        <Router>\r\n        <HeaderComponent/>\r\n            <Switch>  \r\n                <Route exact path=\"/login\">\r\n                    <LoginPage />\r\n                </Route>\r\n                <Route exact path=\"/register\">\r\n                    <RegisterPage />\r\n                </Route>\r\n                \r\n                {!props.token ? \r\n                    (\r\n                        <Redirect to=\"/login\"/>\r\n                    ) : (\r\n                        <React.Fragment>\r\n                            <Route exact path=\"/home\" component={ReservationPage}/>\r\n                            <Route exact path=\"/about\"/>\r\n                            <Route exact path=\"/account/overview\" component={OverViewPage}/>\r\n                            <Route exact path=\"/account/pass\" component={ChangePasswordPage}/>\r\n                            <Route exact path=\"/account/personal\" component={ChangePersonalDataPage}/>\r\n                            <Route exact path=\"/account/reservations\" component={MyReservationsPage}/>\r\n                            <Route exact path=\"/account/settings\" component={SettingsPage}/>\r\n                            <Route exact path=\"/contact\" component={ContactPage}/>\r\n                            <Route exact path=\"/services/airport\"/>\r\n                            <Route exact path=\"/services/chaffeurs\"/>\r\n                            <Route exact path=\"/services/events\"/>\r\n                            <Redirect to=\"/home\"/>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n                <Redirect to=\"/login\"/>\r\n            </Switch>\r\n        <FooterComponent/>\r\n        </Router>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState): IMappedState => {\r\n    return {\r\n      token: state.user.token\r\n    }\r\n}\r\nconst connector = connect(mapStateToProps)\r\nexport default connector(RouterPage)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport RouterPage from './RouterPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <RouterPage />\n      <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossOrigin=\"anonymous\"></link>\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}